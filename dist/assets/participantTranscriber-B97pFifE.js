const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DgkDxTOk.js","assets/index-DvJ9VsLv.js","assets/index-23xNmFm2.css"])))=>i.map(i=>d[i]);
import{_ as a}from"./index-DvJ9VsLv.js";class o{constructor(s){this._speechStartTs=0,this.opts=s}async init(){if(this.micVad)return;const{MicVAD:s}=await a(async()=>{const{MicVAD:t}=await import("./index-DgkDxTOk.js").then(e=>e.i);return{MicVAD:t}},__vite__mapDeps([0,1,2]));this.micVad=await s.new({sourceMediaStream:this.opts.stream,positiveSpeechThreshold:this.opts.threshold??.6,negativeSpeechThreshold:(this.opts.threshold??.6)/2,onSpeechStart:()=>{this._speechStartTs=performance.now(),this.opts.onSpeechStart?.()},onSpeechEnd:t=>{const e={start:this._speechStartTs,end:performance.now(),audio:t};this.opts.onSpeechEnd?.(e)}})}async start(){this.micVad||await this.init(),await this.micVad?.start()}stop(){this.micVad?.pause()}dispose(){this.micVad?.destroy(),this.micVad=void 0}}class h{constructor(s,t){this.mediaRecorder=null,this.chunks=[],this.participantId=s,this.vad=new o({stream:t,onSpeechStart:()=>{this.chunks=[];try{this.mediaRecorder=new MediaRecorder(t,{mimeType:"audio/webm;codecs=opus",audioBitsPerSecond:48e3})}catch(e){console.error("MediaRecorder init error",e);return}this.mediaRecorder.ondataavailable=e=>{e.data&&e.data.size>0&&this.chunks.push(e.data)},this.mediaRecorder.start()},onSpeechEnd:e=>this.handleSpeechEnd(e)})}async start(){await this.vad.start()}stop(){this.vad.stop(),this.mediaRecorder?.stop()}dispose(){this.vad.dispose(),this.mediaRecorder?.stop(),this.mediaRecorder=null}async handleSpeechEnd(s){if(!this.mediaRecorder)return;await new Promise(e=>{this.mediaRecorder.onstop=e,this.mediaRecorder.stop()});const t=new Blob(this.chunks,{type:"audio/webm"});console.log(`[VAD] utterance captured (${(t.size/1024).toFixed(1)} KB) for`,this.participantId);try{const e=await fetch("/api/whisper-transcribe",{method:"POST",headers:{"Content-Type":"audio/webm"},body:t}),i=await e.json();e.ok&&i.text?console.log(`[Whisper][${this.participantId}]`,i.text):console.warn("whisper error",i)}catch(e){console.error("fetch whisper error",e)}}}export{h as ParticipantTranscriber};
